name: C/C++ CI

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make
    
    - name: Compile Address Book
      run: gcc -o addressbook main.c contact.c file.c populate.c -std=c99 -Wall -Wextra
    
    - name: Test compilation
      run: |
        if [ -f addressbook ]; then
          echo "Compilation successful"
        else
          echo "Compilation failed"
          exit 1
        fi
    
    - name: Run basic functionality test
      run: |
        echo "Testing help menu"
        echo "9" | timeout 10s ./addressbook || true
        echo "Testing about menu"
        echo -e "10\n0\nn" | timeout 10s ./addressbook || true
    
    - name: Check for memory leaks (if valgrind available)
      run: |
        if command -v valgrind &> /dev/null; then
          echo "Running valgrind memory check"
          echo -e "10\n0\nn" | timeout 30s valgrind --leak-check=full --error-exitcode=1 ./addressbook
        else
          echo "Valgrind not available, skipping memory check"
        fi
      continue-on-error: true

  build-windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup MinGW
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: mingw-w64-x86_64-gcc
    
    - name: Compile Address Book (Windows)
      shell: msys2 {0}
      run: gcc -o addressbook.exe main.c contact.c file.c populate.c -std=c99 -Wall -Wextra
    
    - name: Test Windows compilation
      shell: msys2 {0}
      run: |
        if [ -f addressbook.exe ]; then
          echo "Windows compilation successful"
        else
          echo "Windows compilation failed"
          exit 1
        fi

  build-macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Compile Address Book (macOS)
      run: gcc -o addressbook main.c contact.c file.c populate.c -std=c99 -Wall -Wextra
    
    - name: Test macOS compilation
      run: |
        if [ -f addressbook ]; then
          echo "macOS compilation successful"
        else
          echo "macOS compilation failed"
          exit 1
        fi

  static-analysis:
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install static analysis tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck
    
    - name: Run cppcheck
      run: |
        cppcheck --enable=all --error-exitcode=1 --suppress=missingIncludeSystem *.c *.h
      continue-on-error: true
    
    - name: Check code style
      run: |
        # Basic checks for code style
        echo "Checking for tabs vs spaces consistency..."
        if grep -P '\t' *.c *.h; then
          echo "Warning: Found tabs in source files"
        fi
        
        echo "Checking for trailing whitespace..."
        if grep -n '[[:space:]]$' *.c *.h; then
          echo "Warning: Found trailing whitespace"
        fi
        
        echo "Static analysis completed"